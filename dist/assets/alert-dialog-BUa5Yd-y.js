import{c as L,x as H,r as s,j as o,z as u,C as V,Q as G,a as n}from"./index-BQP0fyHA.js";import{i as A,T as W,O as Y,W as q,C as B,j as Q,k as J,l as D,m as K,P as U}from"./dialog-BtKVVTZx.js";import{b as v}from"./button-GPVt3lpZ.js";/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const ye=L("Trash2",[["path",{d:"M3 6h18",key:"d0wm0j"}],["path",{d:"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6",key:"4alrt4"}],["path",{d:"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2",key:"v07s0e"}],["line",{x1:"10",x2:"10",y1:"11",y2:"17",key:"1uufr5"}],["line",{x1:"14",x2:"14",y1:"11",y2:"17",key:"xtxkd"}]]);var x="AlertDialog",[X,Ne]=H(x,[A]),i=A(),y=e=>{const{__scopeAlertDialog:a,...t}=e,r=i(a);return o.jsx(K,{...r,...t,modal:!0})};y.displayName=x;var Z="AlertDialogTrigger",N=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(W,{...l,...r,ref:a})});N.displayName=Z;var ee="AlertDialogPortal",h=e=>{const{__scopeAlertDialog:a,...t}=e,r=i(a);return o.jsx(U,{...r,...t})};h.displayName=ee;var ae="AlertDialogOverlay",j=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(Y,{...l,...r,ref:a})});j.displayName=ae;var c="AlertDialogContent",[te,oe]=X(c),R=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,children:r,...l}=e,g=i(t),p=s.useRef(null),F=u(a,p),f=s.useRef(null);return o.jsx(q,{contentName:c,titleName:_,docsSlug:"alert-dialog",children:o.jsx(te,{scope:t,cancelRef:f,children:o.jsxs(B,{role:"alertdialog",...g,...l,ref:F,onOpenAutoFocus:V(l.onOpenAutoFocus,d=>{var m;d.preventDefault(),(m=f.current)==null||m.focus({preventScroll:!0})}),onPointerDownOutside:d=>d.preventDefault(),onInteractOutside:d=>d.preventDefault(),children:[o.jsx(G,{children:r}),o.jsx(se,{contentRef:p})]})})})});R.displayName=c;var _="AlertDialogTitle",w=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(Q,{...l,...r,ref:a})});w.displayName=_;var C="AlertDialogDescription",T=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(J,{...l,...r,ref:a})});T.displayName=C;var re="AlertDialogAction",b=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(D,{...l,...r,ref:a})});b.displayName=re;var E="AlertDialogCancel",P=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,{cancelRef:l}=oe(E,t),g=i(t),p=u(a,l);return o.jsx(D,{...g,...r,ref:p})});P.displayName=E;var se=({contentRef:e})=>{const a=`\`${c}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${c}\` by passing a \`${C}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${c}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{var r;document.getElementById((r=e.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(a)},[a,e]),null},le=y,ie=N,ne=h,S=j,O=R,M=b,$=P,k=w,I=T;const he=le,je=ie,ce=ne,z=s.forwardRef(({className:e,...a},t)=>o.jsx(S,{className:n("fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...a,ref:t}));z.displayName=S.displayName;const de=s.forwardRef(({className:e,...a},t)=>o.jsxs(ce,{children:[o.jsx(z,{}),o.jsx(O,{ref:t,className:n("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...a})]}));de.displayName=O.displayName;const pe=({className:e,...a})=>o.jsx("div",{className:n("flex flex-col space-y-2 text-center sm:text-left",e),...a});pe.displayName="AlertDialogHeader";const ge=({className:e,...a})=>o.jsx("div",{className:n("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...a});ge.displayName="AlertDialogFooter";const fe=s.forwardRef(({className:e,...a},t)=>o.jsx(k,{ref:t,className:n("text-lg font-semibold",e),...a}));fe.displayName=k.displayName;const me=s.forwardRef(({className:e,...a},t)=>o.jsx(I,{ref:t,className:n("text-sm text-muted-foreground",e),...a}));me.displayName=I.displayName;const ue=s.forwardRef(({className:e,...a},t)=>o.jsx(M,{ref:t,className:n(v(),e),...a}));ue.displayName=M.displayName;const Ae=s.forwardRef(({className:e,...a},t)=>o.jsx($,{ref:t,className:n(v({variant:"outline"}),"mt-2 sm:mt-0",e),...a}));Ae.displayName=$.displayName;export{he as A,ye as T,je as a,de as b,pe as c,fe as d,me as e,ge as f,Ae as g,ue as h};
